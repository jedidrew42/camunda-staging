{"version":3,"sources":["../../src/base/Manager.js"],"names":["EventBus","DmnModdle","domify","query","domQuery","remove","domRemove","assign","debounce","isNumber","DEFAULT_CONTAINER_OPTIONS","width","height","position","Manager","options","_viewsChanged","_emit","views","_views","activeView","_activeView","_eventBus","_viewers","_init","xml","done","open","noop","_moddle","fromXML","err","definitions","context","error","parseWarnings","warnings","_setDefinitions","checkValidationError","warmings","view","_getInitialView","Error","allWarnings","concat","_definitions","getActiveView","_getViewer","element","filter","v","toXML","e","console","on","off","once","parentNode","get","constructor","prototype","jquery","appendChild","_container","Object","keys","viewerId","viewer","safeExecute","_options","_createModdle","container","containerOptions","style","ensureUnit","attachTo","_switchView","_updateViews","viewProviders","_getViewProviders","displayableElements","drgElements","reduce","provider","find","opens","$type","type","id","newActiveView","viewsEqual","newView","complete","activeViewer","newViewer","detach","_createViewer","Viewer","providerOptions","commonOptions","common","additionalModules","_parent","moddle","fire","moddleExtensions","val","pattern","match","exec","message","arr","fn","a","b","method"],"mappings":"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","file":"Manager.js","sourcesContent":["import EventBus from 'diagram-js/lib/core/EventBus';\n\nimport DmnModdle from 'dmn-moddle';\n\nimport {\n  domify,\n  query as domQuery,\n  remove as domRemove\n} from 'min-dom';\n\nimport {\n  assign,\n  debounce,\n  isNumber\n} from 'min-dash';\n\n\nconst DEFAULT_CONTAINER_OPTIONS = {\n  width: '100%',\n  height: '100%',\n  position: 'relative'\n};\n\n/**\n * The base class for DMN viewers and editors.\n *\n * @abstract\n */\nexport default class Manager {\n\n  /**\n   * Create a new instance with the given options.\n   *\n   * @param  {Object} options\n   *\n   * @return {Manager}\n   */\n  constructor(options={}) {\n    this._eventBus = new EventBus();\n\n    this._viewsChanged = debounce(this._viewsChanged, 0);\n\n    this._views = [];\n    this._viewers = {};\n\n    this._init(options);\n  }\n\n  /**\n   * Parse and render a DMN 1.1 diagram.\n   *\n   * Once finished the viewer reports back the result to the\n   * provided callback function with (err, warnings).\n   *\n   * ## Life-Cycle Events\n   *\n   * During import the viewer will fire life-cycle events:\n   *\n   *   * import.parse.start (about to read model from xml)\n   *   * import.parse.complete (model read; may have worked or not)\n   *   * import.render.start (graphical import start)\n   *   * import.render.complete (graphical import finished)\n   *   * import.done (everything done)\n   *\n   * You can use these events to hook into the life-cycle.\n   *\n   * @param {String} xml the DMN 1.1 xml\n   * @param {Object} [options]\n   * @param {Boolean} [options.open=true]\n   * @param {Function} [done] invoked with (err, warnings=[])\n   */\n  importXML(xml, options, done) {\n\n    if (typeof options !== 'object') {\n      done = options;\n      options = { open: true };\n    }\n\n    if (typeof done !== 'function') {\n      done = noop;\n    }\n\n    // hook in pre-parse listeners +\n    // allow xml manipulation\n    xml = this._emit('import.parse.start', { xml: xml }) || xml;\n\n    this._moddle.fromXML(xml, 'dmn:Definitions', (err, definitions, context) => {\n\n      // hook in post parse listeners +\n      // allow definitions manipulation\n      definitions = this._emit('import.parse.complete', {\n        error: err,\n        definitions: definitions,\n        context: context\n      }) || definitions;\n\n      var parseWarnings = context.warnings;\n\n      this._setDefinitions(definitions);\n\n      if (err) {\n        err = checkValidationError(err);\n      }\n\n      if (err || !options.open) {\n        this._emit('import.done', { error: err, warmings: parseWarnings });\n\n        return done(err, parseWarnings);\n      }\n\n      var view = this._activeView || this._getInitialView(this._views);\n\n      if (!view) {\n        return done(new Error('no displayable contents'));\n      }\n\n      this.open(view, (err, warnings) => {\n\n        var allWarnings = [].concat(parseWarnings, warnings || []);\n\n        this._emit('import.done', { error: err, warnings: allWarnings });\n\n        done(err, allWarnings);\n      });\n    });\n  }\n\n  getDefinitions() {\n    return this._definitions;\n  }\n\n  /**\n   * Return active view.\n   *\n   * @return {View}\n   */\n  getActiveView() {\n    return this._activeView;\n  }\n\n  /**\n   * Get the currently active viewer instance.\n   *\n   * @return {View}\n   */\n  getActiveViewer() {\n    var activeView = this.getActiveView();\n\n    return activeView && this._getViewer(activeView);\n  }\n\n  getView(element) {\n    return this._views.filter(function(v) {\n      return v.element === element;\n    })[0];\n  }\n\n  getViews() {\n    return this._views;\n  }\n\n  /**\n   * Export the currently displayed DMN 1.1 diagram as\n   * a DMN 1.1 XML document.\n   *\n   * ## Life-Cycle Events\n   *\n   * During XML saving the viewer will fire life-cycle events:\n   *\n   *   * saveXML.start (before serialization)\n   *   * saveXML.serialized (after xml generation)\n   *   * saveXML.done (everything done)\n   *\n   * You can use these events to hook into the life-cycle.\n   *\n   * @param {Object} [options] export options\n   * @param {Boolean} [options.format=false] output formated XML\n   * @param {Boolean} [options.preamble=true] output preamble\n   * @param {Function} done invoked with (err, xml)\n   */\n  saveXML(options, done) {\n\n    if (typeof options === 'function') {\n      done = options;\n      options = {};\n    }\n\n    var definitions = this._definitions;\n\n    if (!definitions) {\n      return done(new Error('no definitions loaded'));\n    }\n\n    // allow to fiddle around with definitions\n    definitions = this._emit('saveXML.start', {\n      definitions: definitions\n    }) || definitions;\n\n    this._moddle.toXML(definitions, options, (err, xml) => {\n\n      try {\n        xml = this._emit('saveXML.serialized', {\n          error: err,\n          xml: xml\n        }) || xml;\n\n        this._emit('saveXML.done', {\n          error: err,\n          xml: xml\n        });\n      } catch (e) {\n        console.error('error in saveXML life-cycle listener', e);\n      }\n\n      done(err, xml);\n    });\n  }\n\n  /**\n   * Register an event listener\n   *\n   * Remove a previously added listener via {@link #off(event, callback)}.\n   *\n   * @param {String} event\n   * @param {Number} [priority]\n   * @param {Function} callback\n   * @param {Object} [that]\n   */\n  on(...args) {\n    this._eventBus.on(...args);\n  }\n\n  /**\n   * De-register an event listener\n   *\n   * @param {String} event\n   * @param {Function} callback\n   */\n  off(...args) {\n    this._eventBus.off(...args);\n  }\n\n  /**\n   * Register a listener to be invoked once only.\n   *\n   * @param {String} event\n   * @param {Number} [priority]\n   * @param {Function} callback\n   * @param {Object} [that]\n   */\n  once(...args) {\n    this._eventBus.once(...args);\n  }\n\n  attachTo(parentNode) {\n\n    // unwrap jQuery if provided\n    if (parentNode.get && parentNode.constructor.prototype.jquery) {\n      parentNode = parentNode.get(0);\n    }\n\n    if (typeof parentNode === 'string') {\n      parentNode = domQuery(parentNode);\n    }\n\n    parentNode.appendChild(this._container);\n  }\n\n  detach() {\n    domRemove(this._container);\n  }\n\n  destroy() {\n    Object.keys(this._viewers, (viewerId) => {\n      var viewer = this._viewers[viewerId];\n\n      safeExecute(viewer, 'destroy');\n    });\n\n    domRemove(this._container);\n  }\n\n  _init(options) {\n    this._options = options;\n\n    this._moddle = this._createModdle(options);\n\n    this._viewers = {};\n    this._views = [];\n\n    const container = domify('<div class=\"dmn-js-parent\"></div>');\n\n    const containerOptions = assign({}, DEFAULT_CONTAINER_OPTIONS, options);\n\n    assign(container.style, {\n      width: ensureUnit(containerOptions.width),\n      height: ensureUnit(containerOptions.height),\n      position: containerOptions.position\n    });\n\n    this._container = container;\n\n    if (options.container) {\n      this.attachTo(options.container);\n    }\n  }\n\n  /**\n   * Open diagram element.\n   *\n   * @param  {ModdleElement}   element\n   * @param  {Function} [done]\n   */\n  open(view, done=noop) {\n    this._switchView(view, done);\n  }\n\n  _setDefinitions(definitions) {\n    this._definitions = definitions;\n\n    this._updateViews();\n  }\n\n  _viewsChanged = () => {\n    this._emit('views.changed', {\n      views: this._views,\n      activeView: this._activeView\n    });\n  }\n\n  /**\n   * Recompute changed views after elements in\n   * the DMN diagram have changed.\n   */\n  _updateViews() {\n\n    var definitions = this._definitions;\n\n    if (!definitions) {\n      this._views = [];\n      this._switchView(null);\n\n      return;\n    }\n\n    var viewProviders = this._getViewProviders();\n\n    var displayableElements = [ definitions, ...(definitions.drgElements || []) ];\n\n    // compute list of available views\n    this._views = displayableElements.reduce((views, element) => {\n\n      var provider = find(viewProviders, function(provider) {\n        if (typeof provider.opens === 'string') {\n          return provider.opens === element.$type;\n        } else {\n          return provider.opens(element);\n        }\n      });\n\n      if (!provider) {\n        return views;\n      }\n\n      var view = {\n        element,\n        type: provider.id\n      };\n\n      return [\n        ...views,\n        view\n      ];\n    }, []);\n\n    var activeView = this._activeView,\n        newActiveView;\n\n    if (activeView) {\n      // check the new active view\n      newActiveView = find(this._views, function(v) {\n        return viewsEqual(activeView, v);\n      }) || this._getInitialView(this._views);\n\n      if (viewsEqual(activeView, newActiveView)) {\n        // active view changed\n        this._activeView = newActiveView;\n      } else {\n        // active view got deleted\n        return this._switchView(null);\n      }\n    }\n\n    this._viewsChanged();\n  }\n\n  _getInitialView(views) {\n    return views[0];\n  }\n\n  /**\n   * Switch to another view.\n   *\n   * @param  {View} newView\n   * @param  {Function} [done]\n   */\n  _switchView(newView, done=noop) {\n\n    var complete = (err, warnings) => {\n      this._viewsChanged();\n\n      done(err, warnings);\n    };\n\n    var activeView = this.getActiveView(),\n        activeViewer;\n\n    var newViewer = newView && this._getViewer(newView),\n        element = newView && newView.element;\n\n    if (activeView) {\n      activeViewer = this._getViewer(activeView);\n\n      if (activeViewer !== newViewer) {\n        safeExecute(activeViewer, 'clear');\n\n        activeViewer.detach();\n      }\n    }\n\n    this._activeView = newView;\n\n    if (newViewer) {\n\n      if (activeViewer !== newViewer) {\n        newViewer.attachTo(this._container);\n      }\n\n      this._emit('import.render.start', {\n        view: newView,\n        element: element\n      });\n\n      return newViewer.open(element, (err, warnings) => {\n\n        this._emit('import.render.complete', {\n          view: newView,\n          error: err,\n          warnings: warnings\n        });\n\n        complete(err, warnings);\n      });\n    }\n\n    // no active view\n    complete();\n  }\n\n  _getViewer(view) {\n\n    var type = view.type;\n\n    var viewer = this._viewers[type];\n\n    if (!viewer) {\n      viewer = this._viewers[type] = this._createViewer(view.type);\n\n      this._emit('viewer.created', {\n        type: type,\n        viewer: viewer\n      });\n    }\n\n    return viewer;\n  }\n\n  _createViewer(id) {\n\n    var provider = find(this._getViewProviders(), function(provider) {\n      return provider.id === id;\n    });\n\n    if (!provider) {\n      throw new Error('no provider for view type <' + id + '>');\n    }\n\n    var Viewer = provider.constructor;\n\n    var providerOptions = this._options[id] || {};\n    var commonOptions = this._options.common || {};\n\n    return new Viewer({\n      ...commonOptions,\n      ...providerOptions,\n      additionalModules: [\n        ...(providerOptions.additionalModules || []), {\n          _parent: [ 'value', this ],\n          moddle: [ 'value', this._moddle ]\n        }\n      ]\n    });\n  }\n\n  /**\n   * Emit an event.\n   */\n  _emit(...args) {\n    this._eventBus.fire(...args);\n  }\n\n  _createModdle(options) {\n    return new DmnModdle(options.moddleExtensions || {});\n  }\n\n  /**\n   * Return the list of available view providers.\n   *\n   * @abstract\n   *\n   * @return {Array<ViewProvider>}\n   */\n  _getViewProviders() {\n    return [];\n  }\n\n}\n\n\n// helpers //////////////////////\n\nfunction noop() {}\n\n/**\n * Ensure the passed argument is a proper unit (defaulting to px)\n */\nfunction ensureUnit(val) {\n  return val + (isNumber(val) ? 'px' : '');\n}\n\nfunction checkValidationError(err) {\n\n  // check if we can help the user by indicating wrong DMN 1.1 xml\n  // (in case he or the exporting tool did not get that right)\n\n  var pattern = /unparsable content <([^>]+)> detected([\\s\\S]*)$/,\n      match = pattern.exec(err.message);\n\n  if (match) {\n    err.message =\n      'unparsable content <' + match[1] + '> detected; ' +\n      'this may indicate an invalid DMN 1.1 diagram file' + match[2];\n  }\n\n  return err;\n}\n\nfunction find(arr, fn) {\n  return arr.filter(fn)[0];\n}\n\n\nfunction viewsEqual(a, b) {\n\n  if (typeof a === 'undefined') {\n    if (typeof b === 'undefined') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  if (typeof b === 'undefined') {\n    return false;\n  }\n\n  // compare by element _or_ element ID equality\n  return a.element === b.element || a.element.id === b.element.id;\n}\n\nfunction safeExecute(viewer, method) {\n  if (typeof viewer[method] === 'function') {\n    viewer[method]();\n  }\n}"]}