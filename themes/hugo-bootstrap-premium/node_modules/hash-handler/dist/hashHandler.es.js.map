{"version":3,"file":"hashHandler.es.js","sources":["../src/index.js"],"sourcesContent":["// @flow\n\n/* eslint no-param-reassign:0 */\n// $FlowFixMe\nimport queryString from 'query-string';\n\n/** hash-handler: Simple hash manipulation\n * @name hash-handler\n * @returns {hash}\n */\nexport default function hashHandler() {\n  const handlers = [];\n\n  // set window hash\n  const setLocationHash = newHash => {\n    let hashVal = newHash;\n    if (typeof hashVal === 'object') {\n      // sort by keys\n      hashVal = Object.keys(hashVal).sort().reduce((r, k) => {\n        // $FlowFixMe\n        r[k] = hashVal[k];\n        return r;\n      }, {});\n\n      // stringify object\n      hashVal = queryString.stringify(hashVal);\n    }\n\n    location.hash = String(hashVal);\n  };\n\n  // get window hash and parse it\n  const getParsedHash = () => queryString.parse(location.hash);\n\n  // hashchange event handler\n  const handleHashchange = () => {\n    const parsedHash = getParsedHash();\n    handlers.forEach(handle => {\n      handle(parsedHash);\n    });\n  };\n\n  // add listener\n  window.addEventListener('hashchange', handleHashchange);\n\n  return {\n    /**\n     * Get current hash.\n     *\n     * @param {String} key     Hash query string key\n     * @return {Object|String} Hash object or single value\n     */\n    get() {\n      // return parsed hash\n      return getParsedHash();\n    },\n\n    /**\n     * Extend current hash with object values.\n     *\n     * @param {Object} newHash\n     */\n    set(newHash: { [string]: any }) {\n      // merge with existing hash\n      const parsedHash = getParsedHash();\n      setLocationHash(Object.assign(parsedHash, newHash));\n    },\n\n    /**\n     * Replace current hash.\n     *\n     * @param {Object} newHash\n     */\n    replace(newHash: string | { [string]: any }) {\n      setLocationHash(newHash);\n    },\n\n    /**\n     * Clear hash.\n     */\n    clear() {\n      // clear hash, # will also remain\n      setLocationHash('');\n    },\n\n    /**\n     * Register hashchange event handler.\n     *\n     * @param {Function} handler\n     */\n    registerListener(handler: Function) {\n      // register handler and handlers it\n      handlers.push(handler);\n    },\n\n    /**\n     * Remove hashchange event handler.\n     *\n     * @param {Function} handler\n     */\n    removeListener(handler: Function) {\n      const index = handlers.indexOf(handler);\n      if (index !== -1) {\n        // remove handler from handlers\n        handlers.splice(index, 1);\n      }\n    },\n\n    /**\n     * Remove all event listeners.\n     */\n    destroy() {\n      // remove event listener\n      window.removeEventListener('hashchange', handleHashchange);\n      // clear handler handlers\n      handlers.length = 0;\n    },\n  };\n}\n"],"names":["hashHandler","handlers","setLocationHash","hashVal","newHash","Object","keys","sort","reduce","r","k","queryString","stringify","hash","String","getParsedHash","parse","location","handleHashchange","parsedHash","forEach","addEventListener","assign","handler","push","index","indexOf","splice","removeEventListener","length"],"mappings":";;;;;;AAIA,AAEA;;;;AAIA,AAAe,SAASA,WAAT,GAAuB;MAC9BC,WAAW,EAAjB;;;MAGMC,kBAAkB,SAAlBA,eAAkB,UAAW;QAC7BC,UAAUC,OAAd;QACI,QAAOD,OAAP,yCAAOA,OAAP,OAAmB,QAAvB,EAAiC;;gBAErBE,OAAOC,IAAP,CAAYH,OAAZ,EAAqBI,IAArB,GAA4BC,MAA5B,CAAmC,UAACC,CAAD,EAAIC,CAAJ,EAAU;;UAEnDA,CAAF,IAAOP,QAAQO,CAAR,CAAP;eACOD,CAAP;OAHQ,EAIP,EAJO,CAAV;;;gBAOUE,YAAYC,SAAZ,CAAsBT,OAAtB,CAAV;;;aAGOU,IAAT,GAAgBC,OAAOX,OAAP,CAAhB;GAdF;;;MAkBMY,gBAAgB,SAAhBA,aAAgB;WAAMJ,YAAYK,KAAZ,CAAkBC,SAASJ,IAA3B,CAAN;GAAtB;;;MAGMK,mBAAmB,SAAnBA,gBAAmB,GAAM;QACvBC,aAAaJ,eAAnB;aACSK,OAAT,CAAiB,kBAAU;aAClBD,UAAP;KADF;GAFF;;;SAQOE,gBAAP,CAAwB,YAAxB,EAAsCH,gBAAtC;;SAEO;;;;;;;OAAA,iBAOC;;aAEGH,eAAP;KATG;;;;;;;;OAAA,eAiBDX,OAjBC,EAiB2B;;UAExBe,aAAaJ,eAAnB;sBACgBV,OAAOiB,MAAP,CAAcH,UAAd,EAA0Bf,OAA1B,CAAhB;KApBG;;;;;;;;WAAA,mBA4BGA,OA5BH,EA4BwC;sBAC3BA,OAAhB;KA7BG;;;;;;SAAA,mBAmCG;;sBAEU,EAAhB;KArCG;;;;;;;;oBAAA,4BA6CYmB,OA7CZ,EA6C+B;;eAEzBC,IAAT,CAAcD,OAAd;KA/CG;;;;;;;;kBAAA,0BAuDUA,OAvDV,EAuD6B;UAC1BE,QAAQxB,SAASyB,OAAT,CAAiBH,OAAjB,CAAd;UACIE,UAAU,CAAC,CAAf,EAAkB;;iBAEPE,MAAT,CAAgBF,KAAhB,EAAuB,CAAvB;;KA3DC;;;;;;WAAA,qBAkEK;;aAEDG,mBAAP,CAA2B,YAA3B,EAAyCV,gBAAzC;;eAESW,MAAT,GAAkB,CAAlB;;GAtEJ;;;"}